generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")  
}

model Dream {
  id             String       @id @default(cuid())
  date           DateTime     @default(now())
  text           String       @db.Text
  interpretation Json         // { mainThemes: string[], emotionalTone: string, symbols: {symbol: string, meaning: string}[], personalInsight: string, guidance: string }
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  reflections    Reflection[]

  @@index([date])
  @@map("dreams")
}

model Symbol {
  id         Int      @id @default(autoincrement())
  key        String   @unique
  meaning    String   @db.Text
  insight    String?  @db.Text
  keywords   String[]
  categoryId Int
  category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@index([categoryId])
}

model Reflection {
  id        String   @id @default(cuid())
  dreamId   String
  dream     Dream    @relation(fields: [dreamId], references: [id], onDelete: Cascade)
  text      String   @db.Text
  createdAt DateTime @default(now())

  @@index([dreamId])
  @@map("reflections")
}

model Category {
  id          Int       @id @default(autoincrement())
  name        String     @unique
  description String?
  symbols     Symbol[]
}